\newcommand*{\MyPkgName}{osgseatingchart}
\ProvidesPackage{\MyPkgName}[2022/07/07 0.1]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package zum Zeichen von Sitzpl채nen
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2022-07-07: initiale Version
%
\newlinechar=`\^^J
\RequirePackage{iftex}               % f체r Test auf Lua(La)TeX
\ifLuaTeX
\else
\typeout{ ************************************************^^J
  * LuaLaTeX is required to compile this document. ^^J
  * Sorry! ^^J
   ************************************************
}
\expandafter\@@end\fi
\RequirePackage{luacode}
\RequirePackage{pgfopts}
\RequirePackage{etoolbox}
\RequirePackage{tikz}
\pgfkeys{
  /osgseatingchart/.cd,
  room/.store in=\osgsc@room,
  room=none,
  export/.store in=\osgsc@exportfile,
  export=,
  .unknown/.code={
    \typeout{*** Unknown option: \pgfkeyscurrentname}
    }
}                                
\ProcessPgfOptions{/osgseatingchart}
% \ifdefstrequal aus der etoolbox scheint Probleme bei unterschiedlichen
% Levels of Expansion zu haben, daher definieren wir ein 채hnliches Macro auf
% Grundlage von \pdfstrcmp.
\RequirePackage{pdftexcmds}
\newcommand{\ifstreq}[4]{%
  \ifnum\pdf@strcmp{#1}{#2}=0
  #3
  \else
  #4
  \fi
}
% Rooms
\luadirect{
  rooms={}
  seatwidth = 9
  seatheight = 5
  distseats = 1
  distrows = 2
  sectorangle = 120
}

\newrobustcmd*{\DeclareRoom}[4][rect]{
  \typeout{***DECLARE***}
  \luadirect{
   local name = \string#2

   function setuprect()   %--[[  set up for a grid arrangement --]]
    local allseats={}
    rooms[name]["seatsinrow"] = {}
    local seatnr = 1
    for row =  1, rooms[name]["rows"] do
      rooms[name]["seatsinrow"][row] =  rooms[name]["maxseatperrow"]
      for seat =  1, rooms[name]["maxseatperrow"] do
        newseat={}
        newseat["exists"] = true        
        newseat["row"] = row
        newseat["seat"] = seat
        newseat["reset"] = 0
        newseat["coordinate"]="("..tostring((seat-1)*(seatwidth+distseats)).."mm,".. tostring((row-1)*(seatheight+distrows)).."mm)"
        newseat["style"]="draw=black, inner sep=0pt, minimum width=".. tostring(seatwidth) .."mm, minimum height=".. tostring(seatheight) .."mm, rotate = 0"
        newseat["descr"]=tostring(row).."-"..tostring(seat)
        allseats[seatnr]= newseat
        seatnr = seatnr +1
        end
    end
    rooms[name]["seats"] = allseats
  end

  function setupcsec()   --[[  set up for a circular sector --]]
    local delta = sectorangle/rooms[name]["maxseatperrow"]
  
    local rmin = seatwidth / (math.sin(delta*math.pi/180)) 
    local allseats={}
    rooms[name]["seatsinrow"] = {}
    local seatnr = 1
    local currentangle
    local angle = sectorangle
    local radius
    %tex.print("\\PackageWarningNoLine{\MyPkgName}{delta: ".. tostring(delta).."}") 
    %tex.print("\\PackageWarningNoLine{\MyPkgName}{rmin: ".. tostring(rmin).."mm }") 
    for row =  1, rooms[name]["rows"] do
      rooms[name]["seatsinrow"][row] =  rooms[name]["maxseatperrow"]
      radius = rmin+(row-1)*(seatheight+distrows)
      delta = math.asin(seatwidth/radius)*180/math.pi
      for seat =  1, rooms[name]["maxseatperrow"] do
        newseat={}
        currentangle = 90+(0.5*rooms[name]["maxseatperrow"]-(seat))*(delta)
        newseat["exists"] = true        
        newseat["row"] = row
        newseat["seat"] = seat
        newseat["reset"] = 0
        newseat["coordinate"]="("..tostring(currentangle)..":".. tostring(radius).."mm)"
        newseat["style"]="draw=black, inner sep=0pt, font=\\scriptsize, minimum width=".. tostring(seatwidth) .."mm, minimum height="..
          tostring(seatheight) .."mm, rotate = "..tostring(currentangle-90)
        newseat["descr"]=tostring(row).."-"..tostring(seat)
        allseats[seatnr]= newseat
        seatnr = seatnr +1
      end
    end
    rooms[name]["seats"] = allseats
  end

    rooms[name]={}
    rooms[name]["geometry"] = \string#1
    rooms[name]["rows"] = \string#3
    rooms[name]["maxseatperrow"] = \string#4
    if ( "\string#1" == "rect")
    then
      setuprect()
    elseif ("\string#1" == "csec")
    then
      setupcsec()
    else
      tex.print("\\PackageWarningNoLine{\MyPkgName}{unknown geometry \string#1, use rect}")
      setuprect()
    end
  }
}
%

\newrobustcmd{\osgscDrawRoom}[1]{
  \typeout{***DRAW***}
  \begin{tikzpicture}
      \luadirect{
        local name = \string#1
        local allseats = rooms[name]["seats"]
        for _,seat in ipairs(allseats) do
          if (seat["exists"] == true) then
            tex.sprint("\\node[rectangle, ", seat["style"],"] at ", seat["coordinate"],"{", seat["descr"], "};")
          end
        end
  }
  \end{tikzpicture}
}


\newrobustcmd{\osgscDeleteSeats}[3]{
  \luadirect{
    local name = \string#1
    local startnr = \string#2
    local endnr = \string#3
    
    for i= startnr,endnr do
      rooms[name]["seats"][i]["exists"] = false
    end
  }
}

\newrobustcmd{\osgscCompactify}[1]{
  \typeout{***Compactify}
  \luadirect{
    local name = \string#1
    local j
    local last = \string##rooms[name]["seats"]
    for i = 1, last do
      if (rooms[name]["seats"][i]["exists"] == false)
      then
         rooms[name]["seats"][i] = nil
      end
    end
    local j = 0
    for i=1,last do
      if (rooms[name]["seats"][i] \string~=nil)
      then
         j=j+1
         rooms[name]["seats"][j] = rooms[name]["seats"][i]
      end
    end
    for i=j+1,last do
      rooms[name]["seats"][i]=nil
    end
    local seatnr = 1
    local lastrow = 0
    for _ ,seat in ipairs(rooms[name]["seats"]) do
       %tex.sprint("\\PackageWarningNoLine{\MyPkgName}{seat: "..seat["descr"].."}")
       if (seat["row"] > lastrow)
       then
        lastrow = seat["row"]
        seatnr = 1
       end
        seat["seat"] = seatnr
        seatnr = seatnr +1
    end
  }  
}

\newrobustcmd{\osgscLabelDebug}[1]{
  \typeout{***LableDEBUG***}
   \luadirect{
     local name = \string#1
     local allseats = rooms[name]["seats"]
     for nr,seat in ipairs(allseats) do
       if (seat \string~= nil) then
  %       seat["descr"] = tostring(nr)
       end
     end
    }    
 }

\newrobustcmd{\osgscLabelRowCol}[1]{
  \typeout{***LableDEBUG***}
  \luadirect{
    local name = \string#1
    local allseats = rooms[name]["seats"]
    for nr,seat in ipairs(allseats) do
      if (seat \string~= nil) then
        seat["descr"] = tostring(seat["row"]).."-".. seat["seat"]
          end
        end
   }    
 }

 
 \newrobustcmd{\osgscClearRow}[2]{
   \luadirect{
     local name = \string#1
     local row = \string#2
     for _,seat in ipairs(rooms[name]["seats"]) do
       if seat["row"] == row then
         seat["descr"] = " "
       end
     end
   } 
 }

 \newrobustcmd{\osgscSplit}[3]{ % room,index,value
   \luadirect{
     local name = \string#1
     local ndx = \string#2
     local reset = \string#3
     rooms[name]["seats"][ndx]["reset"] = reset
   }
 }
 \newcounter{rownr}
 \newcounter{seatnr}
 
 \newcommand{\osgscprintseatlabel}[2]{%
   \setcounter{rownr}{#1}%
   \setcounter{seatnr}{#2}%
   \arabic{rownr}-\Alph{seatnr}
 } 

 \newrobustcmd{\osgscOccupy}[3]{ %{room}{row}{pattern}
     \luaexec{
       local name = \string#1
       local row = \string#2
       local pattern = "\string#3"
       local off = 0
       local runoff
       local dist = 0
       local running = 1
       local reset = 0
       local ndx,_ = string.find(pattern,'+')
       if (ndx == nil) then
         dist = tonumber(pattern)
         off = 0
       else
         dist = tonumber(string.sub(pattern,1,ndx-1))
         off = tonumber(string.sub(pattern,ndx+1,-1))
       end
       for i,seat in ipairs(rooms[name]["seats"]) do
         if seat["row"] == row then
           if  (seat["reset"] > 0) then reset = seat["reset"] end
           if (((seat["seat"]-1+reset) \% dist) == off) then
              seat["descr"] = "\\osgscprintseatlabel{"..tostring(row).."}{".. tostring(running).."}"
              %seat["descr"] = tostring(row).."-".. tostring(running)
              running = running + 1
            else
              seat["descr"] = " "
           end
         end
       end
   }
}
 
%%%%%%%%%%%%%%%%%%%%%%%%%
% Rooms
 %%%%%%%%%%%%%%%%%%%%%%%%%
 \DeclareRoom{1.201}{17}{16}
 %%%%%%%%%%%%%%%%%%%%%%%%%
 \DeclareRoom[csec]{1.316}{11}{32}
 \osgscDeleteSeats{1.316}{1}{5}
 \osgscDeleteSeats{1.316}{28}{37}
 \osgscDeleteSeats{1.316}{60}{69}
 \osgscDeleteSeats{1.316}{92}{99}
 \osgscDeleteSeats{1.316}{126}{131}
 \osgscDeleteSeats{1.316}{158}{163}
 \osgscDeleteSeats{1.316}{190}{195}
 \osgscDeleteSeats{1.316}{222}{224}
 \osgscDeleteSeats{1.316}{303}{306}
 \osgscDeleteSeats{1.316}{335}{338}
 \osgscSplit{1.316}{307}{1}
 \osgscSplit{1.316}{339}{1}
 \osgscCompactify{1.316}
%\DeclareRoom{1.201}{17}{16}
%\osgsc@set@rect{1.201}
%
% \ifstreq{\osgsc@room}{none}{
%     \typeout{
%       ************************************************^^J
%       * No room provided.^^J
%       * You need to set the option 'room'^^J
%       ************************************************}
%     \@@end % f체hrt wahrscheinlich zu unbalancierten if, ggf. \expandafter
%   }{
%     % TODO: load room
% }